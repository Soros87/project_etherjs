function getItem(label, key, icon, children, type) {
  return {
    key,
    icon,
    children,
    label,
    type,
  };
}

export const items = [
  getItem("Getting Started", "sub1", null, [
    getItem("Some Common Terminology", "1"),
    getItem("Connecting to Ethereum", "2"),
    getItem("User Interaction", "3"),
    getItem("Interacting with the Blockchain", "4"),
    getItem("Contracts", "5"),
    getItem("Signing Messages", "6"),
  ]),
  getItem("Ethereum Basics", "sub2", null, [
    getItem("Topics", "7", null, [
      getItem("Application Binary Interfaces", "8", null, [
        getItem("Call Data Representation", "9"),
        getItem("Event Data Representation", "10"),
        getItem("Deployment", "11"),
      ]),
    ]),
  ]),
  getItem("Application Programming Interface", "sub3", null, [
    getItem("PollingBlockTagSubscriber", "12"),
    getItem("Application Binary Interfaces", "13", null, [
      getItem("Interfaces", "14"),
      getItem("Typed Values", "15"),
      getItem("ABI Encoding", "16", null, [
        getItem("AbiCoder", "17"),
        getItem("Fragments", "18"),
      ]),
    ]),
    getItem("Addresses", "19", null, [
      getItem("Addressable", "20"),
      getItem("NameResolver", "21"),
    ]),
    getItem("Constants", "22"),
    getItem("Contracts", "23", null, [
      getItem("Base Contract", "24"),
      getItem("BaseContractMethod", "25"),
      getItem("ConstantContractMethod", "26"),
      getItem("Contract", "27"),
      getItem("ContractDeployTransaction", "28"),
      getItem("ContractEvent", "29"),
      getItem("ContractEventPayload", "30"),
      getItem("ContractFactory", "31"),
      getItem("ContractInterface", "32"),
      getItem("ContractMethod", "33"),
      getItem("ContractTransaction", "34"),
      getItem("ContractTransactionReceipt", "35"),
      getItem("ContractTransactionResponse", "36"),
      getItem("ContractUnknownEventPayload", "37"),
      getItem("DeferredTopicFilter", "38"),
      getItem("EventLog", "39"),
      getItem("Overrides", "40"),
      getItem("UndecodedEventLog", "41"),
      getItem("WrappedFallback", "42"),
    ]),
    getItem("Cryptographic Functions", "43", null, [
      getItem("Hash Functions", "44"),
      getItem("HMAC", "45"),
      getItem("Passwords", "46"),
      getItem("Random Values", "47"),
      getItem("Signing", "48"),
    ]),
    getItem("Hashing utilities", "49", null, [
      getItem("TypedDatadomains", "50"),
      getItem("TypedDataEncoder", "51"),
      getItem("TypedDataField", "52"),
    ]),
    getItem("Providers", "53", null, [
      getItem("Block", "54"),
      getItem("BrowserProvider", "55"),
      getItem("ContractRunner", "56"),
      getItem("Eip1193Provider", "57"),
      getItem("EnsPlugin", "58"),
      getItem("EventFilter", "59"),
      getItem("FeeData", "60"),
      getItem("FeeDataNetworkPlugin", "61"),
      getItem("FetchUrlFeeDataNetworkPlugin", "62"),
      getItem("Filter", "63"),
      getItem("FilterByBlockHash", "64"),
      getItem("GasCostPlugin", "65"),
      getItem("IpcSocketProvider", "66"),
      getItem("Log", "67"),
      getItem("MinedBlock", "68"),
      getItem("MinedTransactionResponse", "69"),
      getItem("NetworkPlugin", "70"),
      getItem("NonceManager", "71"),
      getItem("PreparedTransactionRequest", "72"),
      getItem("Provider", "73"),
      getItem("Signer", "74"),
      getItem("TransactionReceipt", "75"),
      getItem("TransactionRequest", "76"),
      getItem("TransactionResponse", "77"),
      getItem("WebSocketLike", "78"),
      getItem("WebSocketProvider", "79"),
      getItem("Networks", "80"),
    ]),
  ]),
];

export const routeNames = {
  sub1: "getting-started",
  sub2: "ethereum-basics",
  sub3: "api",
  1: "get-started",
  2: "connect-ethereum",
  3: "user-interaction",
  4: "interact-w-blockchain",
  5: "contracts",
  6: "signing-msg",
  7: "topics",
  8: "abi",
  9: "cdr",
  10: "edr",
  11: "deployment",
  12: "pollingblock",
  13: "abi",
  14: "interfaces",
  15: "typed-values",
  16: "abi-encoding",
  17: "abicoder",
  18: "fragments",
  19: "addresses",
  20: "addressable",
  21: "nameresolver",
  22: "constants",
  23: "contracts",
  24: "base-contract",
  25: "basecontractmtd",
  26: "constantcontmtd",
  27: "contract",
  28: "contractdeploytxn",
  29: "contractevent",
  30: "contracteventpayload",
  31: "contractfactory",
  32: "contractinterface",
  33: "contractmethod",
  34: "contracttxn",
  35: "contracttxnreceipt",
  36: "contracttxnresp",
  37: "contractunknowneventpayload",
  38: "deferredtopicfilter",
  39: "eventlog",
  40: "overrides",
  41: "undecodedeventlog",
  42: "wrappedfallback",
  43: "cryptographicfunc",
  44: "hashfunctions",
  45: "hmac",
  46: "passwords",
  47: "randomvalues",
  48: "signing",
  49: "hashingutilities",
  50: "typeddomains",
  51: "typeddataencoder",
  52: "typeddatafield",
  53: "providers",
  54: "block",
  55: "browserprovider",
  56: "contractrunner",
  57: "eip1193prov",
  58: "ensplugin",
  59: "eventfilter",
  60: "feedata",
  61: "feedatanetworkplugin",
  62: "fetchurlfeedatanetworkplugin",
  63: "filter",
  64: "filterbyblockhash",
  65: "gascostplugin",
  66: "ipcsocketprovider",
  67: "log",
  68: "minedblock",
  69: "minedtxnresp",
  70: "networkplugin",
  71: "noncemanager",
  72: "preptxnreq",
  73: "provider",
  74: "signer",
  75: "txnreceipt",
  76: "txnreq",
  77: "txnresp",
  78: "websocketlike",
  79: "websocketprovider",
  80: "networks",
};
